@{
    ViewData["Title"] = "Modern Link Shortener";
}

<style>
    /* Import a modern font */
    @@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');

    :root {
        --primary-color: #6a11cb;
        --secondary-color: #2575fc;
        --background-color: #121212;
        --surface-color: #1e1e1e;
        --text-color: #e0e0e0;
        --text-muted-color: #888;
        --success-color: #4CAF50;
        --error-color: #f44336;
    }

    body {
        background-color: var(--background-color);
        color: var(--text-color);
        font-family: 'Poppins', sans-serif;
        margin: 0;
        padding: 0;
        line-height: 1.6;
    }

    .container {
        max-width: 900px;
        margin: 0 auto;
        padding: 2rem;
        text-align: center;
    }

    /* Header and Hero Section */
    .hero-section {
        padding: 4rem 0;
    }

    .hero-section h1 {
        font-size: 3rem;
        font-weight: 700;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 0.5rem;
    }

    .hero-section .subtitle {
        font-size: 1.2rem;
        color: var(--text-muted-color);
        margin-bottom: 2.5rem;
    }

    /* Form Styling */
    .shortener-form {
        background-color: var(--surface-color);
        padding: 2.5rem;
        border-radius: 12px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        margin-bottom: 2rem;
    }

    .form-group {
        display: flex;
        gap: 1rem;
        flex-direction: column;
    }

    .form-group input[type="url"] {
        flex-grow: 1;
        padding: 1rem;
        font-size: 1rem;
        border: 1px solid #444;
        border-radius: 8px;
        background-color: #2a2a2a;
        color: var(--text-color);
        outline: none;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

    .form-group input[type="url"]:focus {
        border-color: var(--secondary-color);
        box-shadow: 0 0 0 3px rgba(37, 117, 252, 0.3);
    }

    .form-group button {
        padding: 1rem 2rem;
        font-size: 1rem;
        font-weight: 600;
        color: #fff;
        background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.3s;
    }

    .form-group button:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    /* Result and Error Display */
    #result-section {
        background-color: var(--surface-color);
        border-radius: 12px;
        padding: 1.5rem;
        margin-top: 2rem;
        text-align: left;
        display: none; /* Hidden by default */
    }

    .result-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        gap: 1rem;
    }

    .result-content p {
        margin: 0;
        color: var(--text-muted-color);
    }

    .result-content a {
        color: var(--secondary-color);
        font-weight: 600;
        text-decoration: none;
        word-break: break-all;
    }

    .result-content a:hover {
        text-decoration: underline;
    }

    .result-buttons {
        display: flex;
        gap: 0.5rem;
    }

    .result-btn {
        padding: 0.75rem 1rem;
        font-size: 0.9rem;
        font-family: 'Poppins', sans-serif;
        background-color: #333;
        color: #fff;
        border: 1px solid #555;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.2s;
        text-decoration: none;
    }

    .result-btn:hover {
        background-color: #444;
    }

    #copy-button.copied {
        background-color: var(--success-color);
        border-color: var(--success-color);
    }

    .error-message {
        color: var(--error-color);
        margin-top: 1rem;
        font-weight: 300;
        font-size: 0.9rem;
    }

    /* Info Sections */
    .info-section {
        margin-top: 5rem;
        padding-top: 3rem;
        border-top: 1px solid #333;
    }

    .info-section h2 {
        font-size: 2rem;
        margin-bottom: 2rem;
    }

    .features-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 2rem;
        text-align: left;
    }

    .feature-card {
        background: var(--surface-color);
        padding: 2rem;
        border-radius: 12px;
    }

    .feature-card h3 {
        margin-top: 0;
        color: var(--secondary-color);
    }

    /* Footer */
    .footer {
        margin-top: 4rem;
        padding: 2rem;
        border-top: 1px solid #333;
        color: var(--text-muted-color);
        font-size: 0.9rem;
    }

    /* Responsive adjustments */
    @@media (min-width: 768px) {
        .form-group {
            flex-direction: row;
        }
    }

</style>

<div class="container">
    <section class="hero-section">
        <h1>Link Shortener</h1>
        <p class="subtitle">Fast, reliable and secure making your URLs tiny and powerful in just a click. Instant and Efficient Link Management.</p>
    </section>

    <div class="shortener-form">
        <form method="post" asp-action="CreateShortUrl">
            <div class="form-group">
                <input type="url" id="longUrl" name="longUrl" placeholder="Enter a long URL to make it tiny" required />
                <button type="submit">Shorten</button>
            </div>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="error-message">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <span>@error.ErrorMessage</span>
                    }
                </div>
            }
        </form>
    </div>

    @if (ViewBag.ShortUrl != null)
    {
        <div id="result-section" style="display: block;">
            <div class="result-content">
                <div>
                    <p>Your short link is ready!</p>
                    <a id="shortened-link" href="@ViewBag.ShortUrl" target="_blank">@ViewBag.ShortUrl</a>
                </div>
                <div class="result-buttons">
                    <button id="copy-button" class="result-btn" onclick="copyToClipboard()">Copy</button>
                    <button class="result-btn" onclick="location.href='@Url.Action("CustomUrl", "Home")'">Custom Url</button>
                </div>
            </div>
        </div>
    }

    <section class="info-section">
        <h2>Why Use Link Shorter?</h2>
        <div class="features-grid">
            <div class="feature-card">
                <h3>Fast & Simple</h3>
                <p>Paste your long URL and get a shortened link in a fraction of a second. No account needed.</p>
            </div>
            <div class="feature-card">
                <h3>Reliable & Secure</h3>
                <p>Our links are permanent and hosted on a secure, robust infrastructure, ensuring they always work.</p>
            </div>
            <div class="feature-card">
                <h3>Analytics Ready</h3>
                <p>Gain deep insights into your audience by tracking exactly who clicks your links, when and from where.</p>
            </div>
            <div class="feature-card">
                <h3>Customizable Links</h3>
                <p>Create personalized short URLs to make your links memorable and on-brand.</p>
            </div>
        </div>
    </section>

</div>

<script>
    // JavaScript for the "Copy to Clipboard" functionality
    function copyToClipboard() {
        const linkElement = document.getElementById('shortened-link');
        const copyButton = document.getElementById('copy-button');

        // Use the Clipboard API for a modern and secure copy action
        navigator.clipboard.writeText(linkElement.href).then(() => {
            // Success! Update button text and style
            copyButton.textContent = 'Copied!';
            copyButton.classList.add('copied');

            // Revert back after 2 seconds
            setTimeout(() => {
                copyButton.textContent = 'Copy';
                copyButton.classList.remove('copied');
            }, 2000);
        }).catch(err => {
            console.error('Failed to copy text: ', err);
            // You can add a fallback here for older browsers if needed
        });
    }
</script>